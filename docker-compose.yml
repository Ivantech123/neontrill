services:
  neon-landing:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SESSION_SECRET=${SESSION_SECRET:-your-super-secret-key-change-in-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    depends_on:
      - migrate
    networks:
      - neon-network

  # Optional: Add Redis for session storage in production
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   networks:
  #     - neon-network

  migrate:
    image: node:20-alpine
    depends_on:
      - postgres
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command: >
      sh -c "npm ci --omit=dev --silent && npx prisma migrate deploy && (npx prisma db seed || true)"
    networks:
      - neon-network

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: neon_landing
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - neon-network

networks:
  neon-network:
    driver: bridge

volumes:
  logs:
  postgres_data:
